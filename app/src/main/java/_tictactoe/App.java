/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package _tictactoe;


import java.util.Scanner;
import java.util.concurrent.TimeUnit;

public class App {
    
    public static void main(String[] args) {

        //create a new game of tictactoe
        Game game = new Game();

        //print out current tictactoe game
        game.printGame();

        //loop through game till someone has won the game
        while(game.checkStatus()==null){

            Scanner scanner = new Scanner(System.in);

        try {

            //ask user for input
            System.out.print("Enter a the row and column you want to enter: ");

            String userInput = scanner.nextLine();
            //replace all whitespace
            userInput = userInput.replaceAll("\s", "");

            char[] userInputCharArray = userInput.toCharArray();
            
            int row = Character.getNumericValue(userInputCharArray[0]);
            int col = Character.getNumericValue(userInputCharArray[1]);
            
            //check if user input is a legal move
            if(game.checkLegalMove(row, col)){
                game.setValue(row, col, Players.PLAYERONE);
            }else{
                System.out.println("Square is already taken");
                continue;
            }
            
        } catch (Exception e) {
            System.out.println("Wrong Input");
        }

        scanner.close();

        //check if user has won
        if(game.checkStatus()!=null){
            game.printGame();
            System.out.println("Congratiolation you won the Game");
            break;
        }

        //print game after user input
        game.printGame();

        //create new Computer Player
        ComputerAI computerAI = new ComputerAI(game);

        //computer calculate move
        int[] computerMove = computerAI.computerMove();

        //update game
        game.setValue(computerMove[0], computerMove[1], Players.PLAYERTWO);

        //check if the computer won the game
       if(game.checkStatus()!=null){
            game.printGame();
            System.out.println("I'm sorry, but the Computer won this time!");
            break;
        }

        //make short timeout to fake computer thinking

        try {
            TimeUnit.SECONDS.sleep(1);
        } catch (Exception e) {
            System.out.println("Pause failed");
        }
        
        //print out game after computer has moved
        game.printGame();
        
        }
        
        
        
    }

}
